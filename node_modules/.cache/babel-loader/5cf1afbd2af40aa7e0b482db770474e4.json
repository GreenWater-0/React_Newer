{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\HBuilder\\\\React_Newer\\\\hello-react\\\\src\\\\components\\\\Dialog\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { nanoid } from 'nanoid';\nimport MsgList from '../MsgList';\nimport SearchNav from '../SearchNav';\nimport DialogFooter from '../DialogFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Dialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends: [{\n        id: '001',\n        name: 'ÁÜäÂ§ß',\n        introduction: 'ÂêÉÈ•≠',\n        isFriend: true\n      }, {\n        id: '002',\n        name: 'ÁÜä‰∫å',\n        introduction: 'Áù°Ëßâ',\n        isFriend: true\n      }, {\n        id: '003',\n        name: 'Ë∑≥Ë∑≥',\n        introduction: 'ÊâìË±ÜË±Ü',\n        isFriend: false\n      }]\n    };\n\n    this.setIsFriend = (newState, id) => {\n      // ‰∏•Ê†ºÊ®°Âºè\n      const {\n        friends\n      } = this.state;\n\n      for (let i = 0; i < friends.length; i++) {\n        if (friends[i].id === id) {\n          friends[i].isFriend = newState;\n          this.setState({\n            friends: friends\n          });\n          break;\n        }\n      }\n    };\n\n    this.addFriend = friendName => {\n      const {\n        friends\n      } = this.state;\n      let newFriends = [{\n        id: nanoid(),\n        name: friendName,\n        introduction: 'üêñ',\n        isFriend: false\n      }, ...friends];\n      this.setState({\n        friends: newFriends\n      });\n    };\n\n    this.deleteFriend = friendId => {\n      // Ëé∑ÂèñÂ•ΩÂèãÂàóË°®\n      const {\n        friends\n      } = this.state; // \n\n      let index = friends.findIndex(item => {\n        return item.id === friendId;\n      });\n      console.log('Âà†Èô§Ôºö', friends[index], index);\n      friends.splice(index, 1);\n      this.setState({\n        friends: friends\n      });\n    };\n\n    this.setAll = state => {\n      const {\n        friends\n      } = this.state;\n      friends.map(item => {\n        item.isFriend = state;\n      });\n      this.setState({\n        friends: friends\n      });\n    };\n\n    this.deleteAllChecked = () => {\n      const {\n        friends\n      } = this.state;\n      let newFriends = friends.filter(item => {\n        return item.isFriend === false;\n      });\n      this.setState({\n        friends: newFriends\n      });\n    };\n  }\n\n  render() {\n    const {\n      friends\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchNav, {\n        addFriend: this.addFriend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MsgList, {\n        friends: friends,\n        setIsFriend: this.setIsFriend,\n        deleteFriend: this.deleteFriend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"simple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogFooter, {\n        friends: friends,\n        setAll: this.setAll,\n        deleteAllChecked: this.deleteAllChecked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/MyProject/HBuilder/React_Newer/hello-react/src/components/Dialog/index.jsx"],"names":["React","Component","nanoid","MsgList","SearchNav","DialogFooter","Dialog","state","friends","id","name","introduction","isFriend","setIsFriend","newState","i","length","setState","addFriend","friendName","newFriends","deleteFriend","friendId","index","findIndex","item","console","log","splice","setAll","map","deleteAllChecked","filter","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {nanoid} from 'nanoid';\r\nimport MsgList from '../MsgList';\r\nimport SearchNav from '../SearchNav';\r\nimport DialogFooter from '../DialogFooter';\r\n\r\nexport default class Dialog extends Component {\r\n  \r\n  state = {\r\n    friends: [\r\n      {id: '001', name: 'ÁÜäÂ§ß', introduction: 'ÂêÉÈ•≠', isFriend: true},\r\n      {id: '002', name: 'ÁÜä‰∫å', introduction: 'Áù°Ëßâ', isFriend: true},\r\n      {id: '003', name: 'Ë∑≥Ë∑≥', introduction: 'ÊâìË±ÜË±Ü', isFriend: false},\r\n    ]\r\n  }\r\n  // ËÆæÁΩÆÁä∂ÊÄÅ\r\n  setIsFriend = (newState, id)=>{\r\n    // ‰∏•Ê†ºÊ®°Âºè\r\n    const {friends} = this.state;\r\n    for (let i = 0; i < friends.length; i++) {\r\n      if (friends[i].id === id) {\r\n        friends[i].isFriend = newState;\r\n        this.setState({\r\n          friends: friends,\r\n        })\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // Ê∑ªÂä†Â•ΩÂèã\r\n  addFriend = (friendName)=>{\r\n    const {friends} = this.state;\r\n    let newFriends = [{\r\n      id: nanoid(),\r\n      name: friendName,\r\n      introduction: 'üêñ',\r\n      isFriend: false,\r\n    }, ...friends];\r\n\r\n    this.setState({\r\n      friends: newFriends,\r\n    })\r\n  };\r\n  // Âà†Èô§Â•ΩÂèã\r\n  deleteFriend = (friendId)=>{\r\n    // Ëé∑ÂèñÂ•ΩÂèãÂàóË°®\r\n    const {friends} = this.state;\r\n    // \r\n    let index = friends.findIndex((item)=>{\r\n      return item.id === friendId\r\n    })\r\n    console.log('Âà†Èô§Ôºö',friends[index],index);\r\n    friends.splice(index, 1);\r\n    this.setState({\r\n      friends: friends,\r\n    })\r\n  }\r\n  // ËÆæÁΩÆÊâÄÊúâÈÄâ‰∏≠/Êú™ÈÄâ‰∏≠\r\n  setAll = (state)=>{\r\n    const {friends} = this.state;\r\n    friends.map((item)=>{\r\n      item.isFriend = state\r\n    })\r\n    this.setState({\r\n      friends: friends,\r\n    })\r\n  }\r\n\r\n  deleteAllChecked = ()=>{\r\n    const {friends} = this.state;\r\n    let newFriends = friends.filter((item)=>{\r\n      return item.isFriend === false;\r\n    })\r\n    this.setState({\r\n      friends: newFriends,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {friends} = this.state;\r\n    return (\r\n      <div>\r\n        <SearchNav addFriend={this.addFriend}/>\r\n        <MsgList friends={friends} setIsFriend={this.setIsFriend} deleteFriend={this.deleteFriend}/>\r\n        <hr className=\"simple\"/> \r\n        <DialogFooter friends={friends} setAll={this.setAll} deleteAllChecked={this.deleteAllChecked}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}